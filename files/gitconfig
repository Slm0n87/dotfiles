; vi: set filetype=dosini nowrap:

[user]
  name       = Justin Force
  email      = justin.force@gmail.com
  signingkey = 0x203EABFA

[color]
  ui = auto

[alias]
  a                    = add
  aa                   = add --all
  alias                = !~/bin/git_aliases
  aliases              = !~/bin/git_aliases
  b                    = branch
  branches-with-commit = branch --all --contains
  branches-with-file   = "!f() { git commits-with-file $1 | awk '{print $1}' | xargs -n1 git branches-with-commit | sort | uniq; }; f"
  bwc                  = !git branches-with-commit
  bwf                  = !git branches-with-file
  cdf                  = clean -df
  ci                   = commit
  co                   = checkout
  commits-with-file    = "!f() { if [ -t 1 ]; then pretty='format:%C(yellow)%h%Creset %s'; else pretty='format:%h %s'; fi; git log --all --pretty=\"$pretty\" -- $@ ; }; f"
  cwf                  = !git commits-with-file
  d                    = diff
  dc                   = diff --cached
  f                    = fetch origin --prune
  ff                   = merge origin/master master --ff-only
  fuckit               = !git reset --hard HEAD && git clean -df
  l                    = log --stat
  last                 = log -p -n1
  lol                  = log --graph --decorate --pretty=oneline --abbrev-commit
  lola                 = log --graph --decorate --pretty=oneline --abbrev-commit --all
  pl                   = pull --rebase
  ps                   = push
  s                    = status --short
  sha                  = rev-parse --short HEAD
  shal                 = rev-parse HEAD

[rerere]
  enabled = true

[core]
  excludesfile = ~/.gitignore_global
  editor = /usr/local/bin/vim

[web]
  browser = google-chrome

; Credentials are stored in ~/.git-credentials. The format for a credentials
; entry looks like this:
;
;   https://usename:password@example.com
;
; For GitHub the token is the username, and there is no password:
;
;   https://0123456789afcdef:@github.com
[credential]
  helper = store

[merge]
  tool = vimdiff
  conflictstyle = diff3
  prompt = false

[diff]
  tool = vimdiff
  conflictstyle = diff3
  prompt = false

; [diff]
;   tool = pickavimdiff
;
; [merge]
;   tool = pickavimdiff
;
; [difftool "pickavimdiff"]
;   cmd = `pickavimdiff` -f -d \"$LOCAL\" \"$REMOTE\"
;
; [mergetool "pickavimdiff"]
;   cmd = `pickavimdiff` -f -d \"$LOCAL\" \"$REMOTE\"

; I don't want this in here, but SourceTree keeps adding it anyway. So I'll just
; leave it, but I'm not using it!
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 

[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[filter "media"]
	clean = git media clean %f
	smudge = git media smudge %f
	required = true

; [push]
; 	default = simple

[hub]
	protocol = https

[init]
	templatedir = ~/.git_template

; Automatically added by something? Probably the post-install script for git
; from Homebrew. Large file storage settings. Aliases? I don't even know.
; https://git-lfs.github.com/
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
