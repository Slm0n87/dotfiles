"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                   Plugins!
"                               Managed with VAM
"                https://github.com/MarcWeber/vim-addon-manager
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set nocompatible | filetype indent plugin on | syn on

let g:vim_addon_manager = {}
let g:vim_addon_manager.shell_commands_run_method='system'

fun! SetupVAM()
  let c = get(g:, 'vim_addon_manager', {})
  let g:vim_addon_manager = c
  let c.plugin_root_dir = expand('$HOME', 1) . '/.vim/vim-addons'
  let &rtp.=(empty(&rtp)?'':',').c.plugin_root_dir.'/vim-addon-manager'
  if !isdirectory(c.plugin_root_dir.'/vim-addon-manager/autoload')
    execute '!git clone --depth=1 git://github.com/MarcWeber/vim-addon-manager '
        \       shellescape(c.plugin_root_dir.'/vim-addon-manager', 1)
  endif
  call vam#ActivateAddons([], {'auto_install' : 0})
endfun

call SetupVAM()
" use <c-x><c-p> to complete plugin names

" My plugin declarations
VAMActivate EasyMotion
VAMActivate Rubytest
VAMActivate Solarized
VAMActivate Syntastic
VAMActivate Tabular
VAMActivate UltiSnips
VAMActivate YouCompleteMe
VAMActivate ag
VAMActivate ctrlp
VAMActivate delimitMate
VAMActivate fugitive
VAMActivate github:MarcWeber/vim-addon-local-vimrc
VAMActivate github:cespare/vim-toml
VAMActivate github:digitaltoad/vim-jade
VAMActivate github:ekalinin/Dockerfile.vim
VAMActivate github:jelera/vim-javascript-syntax
VAMActivate github:jimmyhchan/dustjs.vim
VAMActivate github:nathanaelkane/vim-indent-guides
VAMActivate github:noc7c9/vim-iced-coffee-script
VAMActivate github:pangloss/vim-javascript
VAMActivate github:scrooloose/nerdtree
VAMActivate github:sjl/gundo.vim
VAMActivate github:wavded/vim-stylus
VAMActivate html5
VAMActivate molokai
VAMActivate rails
VAMActivate rust
VAMActivate tComment
VAMActivate trailing-whitespace
VAMActivate vim-coffee-script
VAMActivate vim-snippets
VAMActivate wmgraphviz

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                 Vim Behavior
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set modeline                                              " allow per-file settings via modeline
set secure                                                " disable unsafe commands in local .vimrc files
set encoding=utf-8 fileencoding=utf-8 termencoding=utf-8  " saving and encoding
set nobackup nowritebackup noswapfile autoread            " no backup or swap
set hlsearch incsearch ignorecase smartcase               " search
set wildmenu                                              " completion
set backspace=indent,eol,start                            " sane backspace
set clipboard=unnamed,unnamedplus                         " use the system clipboard for yank/put/delete
set mouse=a                                               " enable mouse for all modes settings
set nomousehide                                           " don't hide the mouse cursor while typing
set mousemodel=popup                                      " right-click pops up context menu
set ruler                                                 " show cursor position in status bar
set number                                                " show absolute line number of the current line
set nofoldenable                                          " I fucking hate code folding
set scrolloff=10                                          " scroll the window so we can always see 10 lines around the cursor
set textwidth=80                                          " wrap at 80 characters like a valid human
set cursorline                                            " highlight the current line
set cursorcolumn                                          " highlight the current line
set printoptions=paper:letter                             " use letter as the print output format
set guioptions-=T                                         " turn off GUI toolbar (icons)
set guioptions-=r                                         " turn off GUI right scrollbar
set guioptions-=L                                         " turn off GUI left scrollbar
set winaltkeys=no                                         " turn off stupid fucking alt shortcuts
set laststatus=2                                          " always show status bar

" check the parent directories for tags, too.
set tags=./tags,tags;$HOME

" middle-click paste
noremap! <s-insert> <middlemouse>

" auto save
autocmd BufLeave,CursorHold,CursorHoldI,FocusLost * silent! wa

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                  Appearance
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

syntax on
set background=dark
set t_Co=256 " 256 colors in terminal

if has('gui_gnome')
  set guifont=Ubuntu\ Mono\ 8.4
endif


" Tweaks for Molokai colorscheme (ignored if Molokai isn't used)
let g:molokai_original=1
let g:rehash256=1

" Use the first available colorscheme in this list
for scheme in [ 'solarized', 'molokai', 'desert' ]
  try
    execute 'colorscheme '.scheme
    break
  catch
    continue
  endtry
endfor

" highlight the 80th column
"
" In Vim >= 7.3, also highlight columns 120+
if exists('+colorcolumn')
  " (I picked 120-320 because you have to provide an upper bound and 500 seems
  " to be enough.)
  let &colorcolumn="80,".join(range(120,500),",")
else
  " fallback for Vim < v7.3
  autocmd BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                  Formatting
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

filetype plugin indent on
set shiftwidth=2 tabstop=2 softtabstop=2 expandtab autoindent
autocmd filetype c,asm,python setlocal shiftwidth=4 tabstop=4 softtabstop=4
autocmd FileType make setlocal noexpandtab

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                Plugin Helpers
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" fugitive shortcuts
noremap \gs :Gstatus<cr>
noremap \gc :Gcommit<cr>
noremap \ga :Gwrite<cr>
noremap \gl :Glog<cr>
noremap \gd :Gdiff<cr>
noremap \gb :Gblame<cr>

" NERDTree
let NERDTreeWinPos='right'
noremap <c-\> :NERDTreeToggle<cr>
noremap \nf :NERDTreeFind<cr>

" EasyMotion
nmap <space> <Plug>(easymotion-s)

" UltiSnips
let g:UltiSnipsExpandTrigger="<c-j>"

" ctrlp.vim
let g:ctrlp_max_files = 0

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                                   Mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Use single quote as additional range key
noremap ' `

" Rerun previous :command
noremap \' @:

" Underline a line with hyphens (<h2> in Markdown documents)
noremap \- yypVr-

" Underline a line with equals (<h1> in Markdown documents)
noremap \= yypVr=

" Remove white space turds from the ends of lines
noremap \W :FixWhitespace<cr>

" Delete ALL THE BUFFERS!
noremap \bd :1,999bd<cr>:NERDTree<cr>:NERDTree<cr>

" cd current window to parent directory of file
noremap \cd :lcd %:h<cr>:pwd<cr>

" Copy path of current file to clipboard
noremap \cp :let @+ = expand("%")<cr>

" Generate ctags
noremap \ct :!ctags -R .<cr><cr>

" Reload ~/.vimrc
noremap \rc :source ~/.vimrc<cr>

" Sort selection
noremap \s :sort<cr>

" Put contents of parentheses on their own newline and reindent (must position
" cursor inside parentheses in normal mode first).
nmap \( ci(<cr><esc>Pa<cr><esc>Vkk=

" Break a comma-delimited list onto new lines
vmap \, :s/,/,\r/g<cr>

" Ag for string in gem directories, too!
" https://github.com/FergusonSean/dotfiles/blob/master/.vimrc#L109
command! -nargs=* Gag call ag#Ag('grep<bang>', <q-args> . ' . ' . system('bundle show --paths | tr "\n" " "'))
